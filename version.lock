{
  "buildHash": "535497b12daa5a6926c28096a6b5c226",
  "jsApi": {
    "apiInstances": [],
    "apiAliases": {
      "Options": "{ ssl :: Maybe { caFile :: Maybe String, certificateFile :: String, keyFile :: String, passphrase :: Maybe String }, verbose :: Boolean }",
      "IncomingRequest": "{ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String }"
    },
    "apiInterfaces": {},
    "apiNames": {
      "patch": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "create": "{ ssl :: Maybe { caFile :: Maybe String, certificateFile :: String, keyFile :: String, passphrase :: Maybe String }, verbose :: Boolean } -> Server",
      "post": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "DEFAULT_OPTIONS": "{ ssl :: Maybe { caFile :: Maybe String, certificateFile :: String, keyFile :: String, passphrase :: Maybe String }, verbose :: Boolean }",
      "delete": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "run": "Integer -> Server -> Server",
      "options": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "connect": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "trace": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "any": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "put": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "log": "LogLevel -> String -> {}",
      "head": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "route": "Method -> String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "get": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server"
    },
    "apiTypes": {
      "LogLevel": [
        "InfoLevel",
        "WarningLevel",
        "ErrorLevel"
      ]
    }
  },
  "llvmApi": {
    "apiInstances": [],
    "apiAliases": {
      "Options": "{ ssl :: Maybe { caFile :: Maybe String, certificateFile :: String, keyFile :: String, passphrase :: Maybe String }, verbose :: Boolean }",
      "IncomingRequest": "{ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String }"
    },
    "apiInterfaces": {},
    "apiNames": {
      "patch": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "create": "{ ssl :: Maybe { caFile :: Maybe String, certificateFile :: String, keyFile :: String, passphrase :: Maybe String }, verbose :: Boolean } -> Server",
      "post": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "DEFAULT_OPTIONS": "{ ssl :: Maybe { caFile :: Maybe String, certificateFile :: String, keyFile :: String, passphrase :: Maybe String }, verbose :: Boolean }",
      "delete": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "run": "Integer -> Server -> Server",
      "options": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "connect": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "trace": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "any": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "put": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "log": "LogLevel -> String -> {}",
      "head": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "route": "Method -> String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server",
      "get": "String -> ({ body :: ByteArray, headers :: List Header, ip :: String, method :: Method, queryParameters :: Dictionary String String, url :: String, urlParameters :: Dictionary String String } -> Wish { body :: ByteArray, headers :: List Header, status :: Integer } { body :: ByteArray, headers :: List Header, status :: Integer }) -> Server -> Server"
    },
    "apiTypes": {
      "LogLevel": [
        "InfoLevel",
        "WarningLevel",
        "ErrorLevel"
      ]
    }
  },
  "versionHash": "d233662f9c26d1a06118c93ef2fd1de9"
}
